- beans:
  - name: sondHeaderFilter
    type: org.apache.camel.support.DefaultHeaderFilterStrategy
    properties:
      inFilterPattern: ".*"
      outFilterPattern: "Content-Type|ETag|Set-Cookie|Location|Cache-Control"
      filterOnMatch: "false"
  - name: checkCSRFCookie
    type: com.cheappchef.sond.CheckCSRFCookie
  - name: cacheHash
    type: com.cheappchef.sond.CacheHash
  - name: manageFirebaseAuthCookie
    type: com.cheappchef.sond.ManageFirebaseAuthCookie
  - name: decodeFirebaseAuthToken
    type: com.cheappchef.sond.DecodeFirebaseAuthToken
- route:
   from:
      uri: "platform-http:/*"
      parameters:
         httpMethodRestrict: GET
         headerFilterStrategy: "#sondHeaderFilter"
      steps:
      - choice:
         when:
         - simple: "${header.CamelHttpUri} == '/'"
           steps:
           - setProperty:
               name: sondStaticFileName
               simple: "{{sond.static.index.file}}"
           - removeHeaders:
               pattern: "*"
               excludePattern: "CamelHttpPath|CamelVertxPlatformHttpRemoteAddress"
           - to: direct:sondStatic
         - simple: "${header.CamelHttpPath} startsWith '/_static/'"
           steps:
           - setProperty:
               name: sondStaticFileName
               simple: "${header.CamelHttpPath.replaceAll('/_static/(.*)','$1')}"
           - removeHeaders:
               pattern: "*"
               excludePattern: "CamelHttpPath|CamelVertxPlatformHttpRemoteAddress"
           - to: direct:sondStatic
         otherwise:
           steps:
            - to: direct:sondDynamicGet
- route:
   from:
      uri: "platform-http:/*"
      parameters:
         httpMethodRestrict: POST
         headerFilterStrategy: "#sondHeaderFilter"
      steps:
      - choice:
         when:
         - simple: "${header.CamelHttpUri} == '/_session/set-auth-cookie'"
           steps:
            - removeHeaders:
               pattern: "*"
               excludePattern: "auth|cookie|CamelVertxPlatformHttpRemoteAddress"
            - to: direct:sond-set-auth-cookie
         - simple: "${header.CamelHttpUri} == '/_session/unset-auth-cookie'"
           steps:
            - removeHeaders:
               pattern: "*"
               excludePattern: "auth|cookie|CamelVertxPlatformHttpRemoteAddress"
            - to: direct:sond-unset-auth-cookie
         otherwise:
           steps:
            - to: direct:sondDynamicPost
- route:
   from:
      uri: direct:sondStatic
      steps:
         - to: direct:checkStaticTooManyRequest
         - to: direct:tryEtagCache
         - to: direct:tryPathCache
         - to: direct:proxyPassResource
- route:
   from:
      uri: direct:sond-set-auth-cookie
      steps:
         - to: direct:checkStaticTooManyRequest
         - to: direct:checkCSRFAttack
         - to: bean:manageFirebaseAuthCookie
         - setHeader:
            name: Set-Cookie
            simple: "auth=${exchangeProperty.sessionCookie};Path=/;Domain={{sond.app.domain}};Max-Age=86400;Secure;Httponly;SameSite=Lax"
         - removeProperty:
            name: sessionCookie
         - setHeader:
            name: Location
            constant: "/home"
         - setHeader:
            name: CamelHttpResponseCode
            constant: 302
- route:
   from:
      uri: direct:sond-unset-auth-cookie
      steps:
         - to: direct:checkStaticTooManyRequest
         - to: direct:checkCSRFAttack
         - setHeader:
            name: Set-Cookie
            simple: "auth=deleted;Path=/;Domain={{sond.app.domain}};Max-Age=0;Secure;Httponly;SameSite=Lax"
         - setHeader:
            name: Location
            constant: "/"
         - setHeader:
            name: CamelHttpResponseCode
            constant: 302
- route:
   from:
      uri: direct:sondDynamicGet
      steps:
         - doTry:
            steps:
            - to: bean:decodeFirebaseAuthToken
            - to: direct:checkDynamicTooManyRequest
            - to: direct:dynamicGet
            doCatch:
               - exception: java.lang.Exception
                 steps:
                  - log: "${exception.message} ${exception.stacktrace}"
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 500
                  - setBody:
                     simple: "resource:classpath:static/error.xml"
                  - stop: {}
- route:
   from:
      uri: direct:sondDynamicPost
      steps:
         - doTry:
            steps:
            - to: direct:checkCSRFAttack
            - to: bean:decodeFirebaseAuthToken
            - to: direct:checkDynamicTooManyRequest
            - to: direct:dynamicPost
            doCatch:
               - exception: java.lang.Exception
                 steps:
                  - log: "${exception.message} ${exception.stacktrace}"
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 500
                  - setBody:
                     simple: "resource:classpath:static/error.xml"
                  - stop: {}
- route:
   from:
      uri: direct:checkCSRFAttack
      steps:
         - doTry:
            steps:
            - to:
               uri: bean:checkCSRFCookie
            doCatch:
               - exception: java.lang.Exception
                 steps:
                  - log: "${exception.message} ${exception.stacktrace}"
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 500
                  - setBody:
                     simple: "resource:classpath:static/error.xml"
                  - stop: {}
- route:
   from:
      uri: direct:checkStaticTooManyRequest
      steps:
         - doTry:
            steps:
               - throttle:
                  expression:
                     simple: "{{sond.throttle.static.total.request-per-second}}"
                  rejectExecution: true
            doCatch:
               - exception: org.apache.camel.processor.ThrottlerRejectedExecutionException
                 steps:
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 429
                  - setBody:
                     constant: Too Many Total Requests within a second, try again latter
                  - stop: {}
         - doTry:
            steps:
               - throttle:
                  expression:
                     constant: "{{sond.throttle.static.per-remote-ip.request-per-second}}"
                  rejectExecution: true
                  correlationExpression:
                     header: CamelVertxPlatformHttpRemoteAddress
            doCatch:
               - exception: org.apache.camel.processor.ThrottlerRejectedExecutionException
                 steps:
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 429
                  - setBody:
                     simple: "Too Many Requests By Remote IP: ${header.CamelVertxPlatformHttpRemoteAddress}"
                  - stop: {}
- route:
   from:
      uri: direct:checkDynamicTooManyRequest
      steps:
         - doTry:
            steps:
               - throttle:
                  expression:
                     simple: "{{sond.throttle.dynamic.total.request-per-second}}"
                  rejectExecution: true
            doCatch:
               - exception: org.apache.camel.processor.ThrottlerRejectedExecutionException
                 steps:
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 429
                  - setBody:
                     constant: Too Many Total Requests within a second, try again latter
                  - stop: {}
         - doTry:
            steps:
               - throttle:
                  expression:
                     constant: "{{sond.throttle.dynamic.per-remote-ip.request-per-second}}"
                  rejectExecution: true
                  correlationExpression:
                     header: CamelVertxPlatformHttpRemoteAddress
            doCatch:
               - exception: org.apache.camel.processor.ThrottlerRejectedExecutionException
                 steps:
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 429
                  - setBody:
                     simple: "Too Many Requests By Remote IP: ${header.CamelVertxPlatformHttpRemoteAddress}"
                  - stop: {}
         - doTry:
            steps:
               - throttle:
                  expression:
                     simple: "{{sond.throttle.dynamic.total.request-per-month}}"
                  timePeriodMillis: 2592000000
                  rejectExecution: true
            doCatch:
               - exception: org.apache.camel.processor.ThrottlerRejectedExecutionException
                 steps:
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 429
                  - setBody:
                     constant: Too Many Total Requests within a month, DDoS suspected
                  - stop: {}
         - doTry:
            steps:
               - setHeader:
                  name: sondFirebaseAuthUserId
                  simple: "${exchangeProperty.sondFirebaseAuthUserId}"
               - throttle:
                  expression:
                     simple: "{{sond.throttle.dynamic.per-user.request-per-second}}"
                  rejectExecution: true
                  correlationExpression:
                     header: sondFirebaseAuthUserId
            doCatch:
               - exception: org.apache.camel.processor.ThrottlerRejectedExecutionException
                 steps:
                  - setHeader:
                     name: CamelHttpResponseCode
                     constant: 429
                  - setBody:
                     constant: Too Many Per User Requests within a second
                  - stop: {}
            doFinally:
               steps:
               - removeHeader:
                  name: sondFirebaseAuthUserId
- route:
   from:
      uri: direct:tryEtagCache
      steps:
         - setHeader:
            name: CamelCaffeineKey
            simple: "${exchangeProperty.sondStaticFileName}-${header.if-not-match}"
         - to: caffeine-cache://etagcache?action=GET
         - choice:
            when:
               - expression:
                  simple:
                     expression: ${header.CamelCaffeineActionHasResult} == 1
                 steps:
                    - setHeader:
                       name: CamelHttpResponseCode
                       constant: 304
                    - setBody:
                       constant: ""
                    - to: direct:cacheAndSecurityInClient
                    - stop: {}
- route:
   from:
      uri: direct:tryPathCache
      steps:
         - setHeader:
            name: CamelCaffeineKey
            constant: "${exchangeProperty.sondStaticFileName}"
         - to: caffeine-cache://pathcache?action=GET
         - choice:
            when:
               - expression:
                  simple:
                     expression: ${header.CamelCaffeineActionHasResult} == 1
                 steps:
                    - to: direct:cacheAndSecurityInClient
                    - stop: {}
- route:
   from:
      uri: direct:proxyPassResource
      steps:
         - setBody:
            simple: "resource:{{sond.static.path}}${exchangeProperty.sondStaticFileName}"
         - setProperty:
            name: resource
            simple: ${body}
         - setHeader:
            name: CamelCaffeineKey
            simple: ${exchangeProperty.sondStaticFileName}
         - to: caffeine-cache://pathcache?action=PUT
         - setHeader:
            name: CamelCaffeineKey
            simple: ${exchangeProperty.sondStaticFileName}-${bean:cacheHash}
         - setBody:
            constant: CACHED
         - to: caffeine-cache://etagcache?action=PUT  
         - setBody:
            simple: ${exchangeProperty.resource}
         - removeProperty:
            name: resource
         - to: direct:cacheAndSecurityInClient
- route:
   from:
      uri: direct:cacheAndSecurityInClient
      steps:
         - setHeader:
              name: Set-Cookie
              simple: "csrf=csrf;Path=/;Domain={{sond.app.domain}};Max-Age=3600;Secure;Httponly;SameSite=Strict"
         - choice:
            when:
               - expression:
                  simple:
                     expression: ${header.if-not-match} != null
                 steps:
                    - setHeader:
                       name: "ETag"
                       simple: ${header.if-not-match}
            otherwise:
               steps:
                  - setHeader:
                     name: "ETag"
                     simple: "\"${bean:cacheHash}\""
         - setHeader:
            name: "Cache-Control"
            simple: "public, max-age=3600"
         - choice:
            when:
               - expression:
                  simple:
                     expression: "${exchangeProperty.sondStaticFileName} endsWith '.js'"
                 steps:
                  - setHeader:
                     name: Content-Type
                     simple: "text/javascript"
               - expression:
                  simple:
                     expression: "${exchangeProperty.sondStaticFileName} endsWith '.html'"
                 steps:
                  - setHeader:
                     name: Content-Type
                     simple: "text/html"
            otherwise:
               steps:
                  - setHeader:
                     name: Content-Type
                     simple: "text/xml"
